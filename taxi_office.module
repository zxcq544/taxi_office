<?php
require_once '_functions.php';
require_once('taxi_office.entity.inc');
require_once 'taxi_office.pages.inc';


/**
 * Implements hook_permission().
 */
function taxi_office_permission() {
	$permission = array();

	$permission[OrderEntityController::ORDER_PERM_CREATE] = array(
			'title'       => 'Создание заказа',
			'description' => 'Право на создание массива'
	);
	$permission[OrderEntityController::ORDER_PERM_VIEW] = array(
			'title'       => 'Просмотр заказа',
			'description' => 'Право на просмотр заказа'
	);
	$permission[OrderEntityController::ORDER_PERM_EDIT] = array(
			'title'       => 'Редактирование заказа',
			'description' => 'Право на редактирование заказ'
	);
	$permission[OrderEntityController::ORDER_PERM_DELETE] = array(
			'title'       => 'Удаление заказа',
			'description' => 'Право на удаление заказа'
	);
	$permission[CarEntityController::CAR_PERM_CREATE] = array(
			'title'       => 'Создание машины',
			'description' => 'Создание машины'
	);

	$permission[CarEntityController::CAR_PERM_EDIT] = array(
			'title'       => 'Редактирование машины',
			'description' => 'Редактирование машины'
	);
	$permission[CarEntityController::CAR_PERM_DELETE] = array(
			'title'       => 'Удаление машины',
			'description' => 'Удаление машины'
	);
	$permission[CarEntityController::CAR_PERM_VIEW] = array(
			'title'       => 'Просмотр машины',
			'description' => 'Просмотр машины'
	);

	$permission[CallEntityController::CALL_VIEW] = array(
			'title' => 'Просмотр всех входящих звонков',
	);

	return $permission;
}

function order_access($op) {
	switch ($op) {
		case 'view':
			return user_access(OrderEntityController::ORDER_PERM_VIEW);
			break;
		case 'edit':
			return user_access(OrderEntityController::ORDER_PERM_EDIT);
			break;
		case 'create':
			return user_access(OrderEntityController::ORDER_PERM_CREATE);
			break;
		case 'delete':
			return user_access(OrderEntityController::ORDER_PERM_DELETE);
			break;
	}
}

function car_access($op) {
	switch ($op) {
		case 'view':
			return user_access(CarEntityController::CAR_PERM_VIEW);
			break;
		case 'edit':
			return user_access(CarEntityController::CAR_PERM_EDIT);
			break;
		case 'create':
			return user_access(CarEntityController::CAR_PERM_CREATE);
			break;
		case 'delete':
			return user_access(CarEntityController::CAR_PERM_DELETE);
			break;
	}
}

function person_access($op) {
	return TRUE;
}

/**
 * Implements hook_menu().
 */
function taxi_office_menu() {
	$items = array();
	$items['dispatcher'] = array(
			'title'            => 'Рабочий стол диспечера',
			'page callback'    => 'taxi_office_dispatcher_page',
			'page arguments'   => array(),
			'access callback'  => 'taxi_office_dispatcher_access',
			'access arguments' => array(),
			'type'             => MENU_CALLBACK,
	);

	$items['admin/config/system/taxi-office'] = array(
			'title'            => 'Настройки TaxiOffice',
			'page callback'    => 'drupal_get_form',
			'page arguments'   => array('taxi_office_config_page'),
			'access arguments' => array('access administration pages'),
			'type'             => MENU_NORMAL_ITEM,
	);

	$items['test_calls'] = array(
			'title' => 'Имитация звонка',
			'page callback'=>'drupal_get_form',
			'page arguments'=>array('taxi_office_phone_form'),
			'access callback'=> 'person_access',
			'access arguments'=> array('view'),
			'type'=>MENU_CALLBACK
	);

	return $items;
}

function taxi_office_dispatcher_access() {
	return TRUE;
}